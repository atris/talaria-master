// Copyright 2019-2020 Grabtaxi Holdings PTE LTE (GRAB), All rights reserved.
// Use of this source code is governed by an MIT-style license that can be found in the LICENSE file

// This file is automatically generated. Do not modify.

package presto

import (
	"fmt"
	"strconv"
)

var _ = fmt.Sprintf

// PrestoThriftBound ...
type PrestoThriftBound int32

const (

	// PrestoThriftBoundAbove ...
	PrestoThriftBoundAbove PrestoThriftBound = 3

	// PrestoThriftBoundBelow ...
	PrestoThriftBoundBelow PrestoThriftBound = 1

	// PrestoThriftBoundExactly ...
	PrestoThriftBoundExactly PrestoThriftBound = 2
)

var (

	// PrestoThriftBoundByName ...
	PrestoThriftBoundByName = map[string]PrestoThriftBound{
		"PrestoThriftBound.ABOVE":   PrestoThriftBoundAbove,
		"PrestoThriftBound.BELOW":   PrestoThriftBoundBelow,
		"PrestoThriftBound.EXACTLY": PrestoThriftBoundExactly,
	}

	// PrestoThriftBoundByValue ...
	PrestoThriftBoundByValue = map[PrestoThriftBound]string{
		PrestoThriftBoundAbove:   "PrestoThriftBound.ABOVE",
		PrestoThriftBoundBelow:   "PrestoThriftBound.BELOW",
		PrestoThriftBoundExactly: "PrestoThriftBound.EXACTLY",
	}
)

// String ...
func (e PrestoThriftBound) String() string {
	name := PrestoThriftBoundByValue[e]
	if name == "" {
		name = fmt.Sprintf("Unknown enum value PrestoThriftBound(%d)", e)
	}
	return name
}

// MarshalJSON ...
func (e PrestoThriftBound) MarshalJSON() ([]byte, error) {
	name := PrestoThriftBoundByValue[e]
	if name == "" {
		name = strconv.Itoa(int(e))
	}
	return []byte("\"" + name + "\""), nil
}

// UnmarshalJSON ...
func (e *PrestoThriftBound) UnmarshalJSON(b []byte) error {
	st := string(b)
	if st[0] == '"' {
		*e = PrestoThriftBound(PrestoThriftBoundByName[st[1:len(st)-1]])
		return nil
	}
	i, err := strconv.Atoi(st)
	*e = PrestoThriftBound(i)
	return err
}

// PrestoThriftAllOrNoneValueSet ...
type PrestoThriftAllOrNoneValueSet struct {
	All bool `thrift:"1,required" json:"all"`
}

// PrestoThriftBigint ...
type PrestoThriftBigint struct {
	Nulls []bool  `thrift:"1" json:"nulls,omitempty"`
	Longs []int64 `thrift:"2" json:"longs,omitempty"`
}

// PrestoThriftBigintArray ...
type PrestoThriftBigintArray struct {
	Nulls  []bool              `thrift:"1" json:"nulls,omitempty"`
	Sizes  []int32             `thrift:"2" json:"sizes,omitempty"`
	Values *PrestoThriftBigint `thrift:"3" json:"values,omitempty"`
}

// PrestoThriftBlock ...
type PrestoThriftBlock struct {
	IntegerData     *PrestoThriftInteger     `thrift:"1" json:"integerData,omitempty"`
	BigintData      *PrestoThriftBigint      `thrift:"2" json:"bigintData,omitempty"`
	DoubleData      *PrestoThriftDouble      `thrift:"3" json:"doubleData,omitempty"`
	VarcharData     *PrestoThriftVarchar     `thrift:"4" json:"varcharData,omitempty"`
	BooleanData     *PrestoThriftBoolean     `thrift:"5" json:"booleanData,omitempty"`
	DateData        *PrestoThriftDate        `thrift:"6" json:"dateData,omitempty"`
	TimestampData   *PrestoThriftTimestamp   `thrift:"7" json:"timestampData,omitempty"`
	JsonData        *PrestoThriftJson        `thrift:"8" json:"jsonData,omitempty"`
	HyperLogLogData *PrestoThriftHyperLogLog `thrift:"9" json:"hyperLogLogData,omitempty"`
	BigintArrayData *PrestoThriftBigintArray `thrift:"10" json:"bigintArrayData,omitempty"`
}

// PrestoThriftBoolean ...
type PrestoThriftBoolean struct {
	Nulls    []bool `thrift:"1" json:"nulls,omitempty"`
	Booleans []bool `thrift:"2" json:"booleans,omitempty"`
}

// PrestoThriftColumnMetadata ...
type PrestoThriftColumnMetadata struct {
	Name    string  `thrift:"1,required" json:"name"`
	Type    string  `thrift:"2,required" json:"type"`
	Comment *string `thrift:"3" json:"comment,omitempty"`
	Hidden  bool    `thrift:"4,required" json:"hidden"`
}

// PrestoThriftDate ...
type PrestoThriftDate struct {
	Nulls []bool  `thrift:"1" json:"nulls,omitempty"`
	Dates []int32 `thrift:"2" json:"dates,omitempty"`
}

// PrestoThriftDomain ...
type PrestoThriftDomain struct {
	ValueSet    *PrestoThriftValueSet `thrift:"1,required" json:"valueSet"`
	NullAllowed bool                  `thrift:"2,required" json:"nullAllowed"`
}

// PrestoThriftDouble ...
type PrestoThriftDouble struct {
	Nulls   []bool    `thrift:"1" json:"nulls,omitempty"`
	Doubles []float64 `thrift:"2" json:"doubles,omitempty"`
}

// PrestoThriftEquatableValueSet ...
type PrestoThriftEquatableValueSet struct {
	WhiteList bool                 `thrift:"1,required" json:"whiteList"`
	Values    []*PrestoThriftBlock `thrift:"2,required" json:"values"`
}

// PrestoThriftHostAddress ...
type PrestoThriftHostAddress struct {
	Host string `thrift:"1,required" json:"host"`
	Port int32  `thrift:"2,required" json:"port"`
}

// PrestoThriftHyperLogLog ...
type PrestoThriftHyperLogLog struct {
	Nulls []bool  `thrift:"1" json:"nulls,omitempty"`
	Sizes []int32 `thrift:"2" json:"sizes,omitempty"`
	Bytes []byte  `thrift:"3" json:"bytes,omitempty"`
}

// PrestoThriftId ...
type PrestoThriftId struct {
	Id []byte `thrift:"1,required" json:"id"`
}

// PrestoThriftInteger ...
type PrestoThriftInteger struct {
	Nulls []bool  `thrift:"1" json:"nulls,omitempty"`
	Ints  []int32 `thrift:"2" json:"ints,omitempty"`
}

// PrestoThriftJson ...
type PrestoThriftJson struct {
	Nulls []bool  `thrift:"1" json:"nulls,omitempty"`
	Sizes []int32 `thrift:"2" json:"sizes,omitempty"`
	Bytes []byte  `thrift:"3" json:"bytes,omitempty"`
}

// PrestoThriftMarker ...
type PrestoThriftMarker struct {
	Value *PrestoThriftBlock `thrift:"1" json:"value,omitempty"`
	Bound PrestoThriftBound  `thrift:"2,required" json:"bound"`
}

// PrestoThriftNullableColumnSet ...
type PrestoThriftNullableColumnSet struct {
	Columns map[string]struct{} `thrift:"1" json:"columns,omitempty"`
}

// PrestoThriftNullableSchemaName ...
type PrestoThriftNullableSchemaName struct {
	SchemaName *string `thrift:"1" json:"schemaName,omitempty"`
}

// PrestoThriftNullableTableMetadata ...
type PrestoThriftNullableTableMetadata struct {
	TableMetadata *PrestoThriftTableMetadata `thrift:"1" json:"tableMetadata,omitempty"`
}

// PrestoThriftNullableToken ...
type PrestoThriftNullableToken struct {
	Token *PrestoThriftId `thrift:"1" json:"token,omitempty"`
}

// PrestoThriftPageResult ...
type PrestoThriftPageResult struct {
	ColumnBlocks []*PrestoThriftBlock `thrift:"1,required" json:"columnBlocks"`
	RowCount     int32                `thrift:"2,required" json:"rowCount"`
	NextToken    *PrestoThriftId      `thrift:"3" json:"nextToken,omitempty"`
}

// PrestoThriftRange ...
type PrestoThriftRange struct {
	Low  *PrestoThriftMarker `thrift:"1,required" json:"low"`
	High *PrestoThriftMarker `thrift:"2,required" json:"high"`
}

// PrestoThriftRangeValueSet ...
type PrestoThriftRangeValueSet struct {
	Ranges []*PrestoThriftRange `thrift:"1,required" json:"ranges"`
}

// PrestoThriftSchemaTableName ...
type PrestoThriftSchemaTableName struct {
	SchemaName string `thrift:"1,required" json:"schemaName"`
	TableName  string `thrift:"2,required" json:"tableName"`
}

// PrestoThriftSplit ...
type PrestoThriftSplit struct {
	SplitId *PrestoThriftId            `thrift:"1,required" json:"splitId"`
	Hosts   []*PrestoThriftHostAddress `thrift:"2,required" json:"hosts"`
}

// PrestoThriftSplitBatch ...
type PrestoThriftSplitBatch struct {
	Splits    []*PrestoThriftSplit `thrift:"1,required" json:"splits"`
	NextToken *PrestoThriftId      `thrift:"2" json:"nextToken,omitempty"`
}

// PrestoThriftTableMetadata ...
type PrestoThriftTableMetadata struct {
	SchemaTableName *PrestoThriftSchemaTableName  `thrift:"1,required" json:"schemaTableName"`
	Columns         []*PrestoThriftColumnMetadata `thrift:"2,required" json:"columns"`
	Comment         *string                       `thrift:"3" json:"comment,omitempty"`
	IndexableKeys   []map[string]struct{}         `thrift:"4" json:"indexableKeys,omitempty"`
}

// PrestoThriftTimestamp ...
type PrestoThriftTimestamp struct {
	Nulls      []bool  `thrift:"1" json:"nulls,omitempty"`
	Timestamps []int64 `thrift:"2" json:"timestamps,omitempty"`
}

// PrestoThriftTupleDomain ...
type PrestoThriftTupleDomain struct {
	Domains map[string]*PrestoThriftDomain `thrift:"1" json:"domains,omitempty"`
}

// PrestoThriftValueSet ...
type PrestoThriftValueSet struct {
	AllOrNoneValueSet *PrestoThriftAllOrNoneValueSet `thrift:"1" json:"allOrNoneValueSet,omitempty"`
	EquatableValueSet *PrestoThriftEquatableValueSet `thrift:"2" json:"equatableValueSet,omitempty"`
	RangeValueSet     *PrestoThriftRangeValueSet     `thrift:"3" json:"rangeValueSet,omitempty"`
}

// PrestoThriftVarchar ...
type PrestoThriftVarchar struct {
	Nulls []bool  `thrift:"1" json:"nulls,omitempty"`
	Sizes []int32 `thrift:"2" json:"sizes,omitempty"`
	Bytes []byte  `thrift:"3" json:"bytes,omitempty"`
}

// PrestoThriftServiceException ...
type PrestoThriftServiceException struct {
	Message   string `thrift:"1,required" json:"message"`
	Retryable bool   `thrift:"2,required" json:"retryable"`
}

func (e *PrestoThriftServiceException) Error() string {
	return fmt.Sprintf("PrestoThriftServiceException{Message: %+v, Retryable: %+v}", e.Message, e.Retryable)
}

// PrestoThriftService ...
type PrestoThriftService interface {
	PrestoGetIndexSplits(schemaTableName *PrestoThriftSchemaTableName, indexColumnNames []string, outputColumnNames []string, keys *PrestoThriftPageResult, outputConstraint *PrestoThriftTupleDomain, maxSplitCount int32, nextToken *PrestoThriftNullableToken) (*PrestoThriftSplitBatch, error)
	PrestoGetRows(splitId *PrestoThriftId, columns []string, maxBytes int64, nextToken *PrestoThriftNullableToken) (*PrestoThriftPageResult, error)
	PrestoGetSplits(schemaTableName *PrestoThriftSchemaTableName, desiredColumns *PrestoThriftNullableColumnSet, outputConstraint *PrestoThriftTupleDomain, maxSplitCount int32, nextToken *PrestoThriftNullableToken) (*PrestoThriftSplitBatch, error)
	PrestoGetTableMetadata(schemaTableName *PrestoThriftSchemaTableName) (*PrestoThriftNullableTableMetadata, error)
	PrestoListSchemaNames() ([]string, error)
	PrestoListTables(schemaNameOrNull *PrestoThriftNullableSchemaName) ([]*PrestoThriftSchemaTableName, error)
}

// PrestoThriftServiceServer ...
type PrestoThriftServiceServer struct {
	Implementation PrestoThriftService
}

// PrestoGetIndexSplits ...
func (s *PrestoThriftServiceServer) PrestoGetIndexSplits(req *PrestoThriftServicePrestoGetIndexSplitsRequest, res *PrestoThriftServicePrestoGetIndexSplitsResponse) error {
	val, err := s.Implementation.PrestoGetIndexSplits(req.SchemaTableName, req.IndexColumnNames, req.OutputColumnNames, req.Keys, req.OutputConstraint, req.MaxSplitCount, req.NextToken)
	switch e := err.(type) {
	case *PrestoThriftServiceException:
		res.Ex1 = e
		err = nil
	}
	res.Value = val
	return err
}

// PrestoGetRows ...
func (s *PrestoThriftServiceServer) PrestoGetRows(req *PrestoThriftServicePrestoGetRowsRequest, res *PrestoThriftServicePrestoGetRowsResponse) error {
	val, err := s.Implementation.PrestoGetRows(req.SplitId, req.Columns, req.MaxBytes, req.NextToken)
	switch e := err.(type) {
	case *PrestoThriftServiceException:
		res.Ex1 = e
		err = nil
	}
	res.Value = val
	return err
}

// PrestoGetSplits ...
func (s *PrestoThriftServiceServer) PrestoGetSplits(req *PrestoThriftServicePrestoGetSplitsRequest, res *PrestoThriftServicePrestoGetSplitsResponse) error {
	val, err := s.Implementation.PrestoGetSplits(req.SchemaTableName, req.DesiredColumns, req.OutputConstraint, req.MaxSplitCount, req.NextToken)
	switch e := err.(type) {
	case *PrestoThriftServiceException:
		res.Ex1 = e
		err = nil
	}
	res.Value = val
	return err
}

// PrestoGetTableMetadata ...
func (s *PrestoThriftServiceServer) PrestoGetTableMetadata(req *PrestoThriftServicePrestoGetTableMetadataRequest, res *PrestoThriftServicePrestoGetTableMetadataResponse) error {
	val, err := s.Implementation.PrestoGetTableMetadata(req.SchemaTableName)
	switch e := err.(type) {
	case *PrestoThriftServiceException:
		res.Ex1 = e
		err = nil
	}
	res.Value = val
	return err
}

// PrestoListSchemaNames ...
func (s *PrestoThriftServiceServer) PrestoListSchemaNames(req *PrestoThriftServicePrestoListSchemaNamesRequest, res *PrestoThriftServicePrestoListSchemaNamesResponse) error {
	val, err := s.Implementation.PrestoListSchemaNames()
	switch e := err.(type) {
	case *PrestoThriftServiceException:
		res.Ex1 = e
		err = nil
	}
	res.Value = val
	return err
}

// PrestoListTables ...
func (s *PrestoThriftServiceServer) PrestoListTables(req *PrestoThriftServicePrestoListTablesRequest, res *PrestoThriftServicePrestoListTablesResponse) error {
	val, err := s.Implementation.PrestoListTables(req.SchemaNameOrNull)
	switch e := err.(type) {
	case *PrestoThriftServiceException:
		res.Ex1 = e
		err = nil
	}
	res.Value = val
	return err
}

// PrestoThriftServicePrestoGetIndexSplitsRequest ...
type PrestoThriftServicePrestoGetIndexSplitsRequest struct {
	SchemaTableName   *PrestoThriftSchemaTableName `thrift:"1,required" json:"schemaTableName"`
	IndexColumnNames  []string                     `thrift:"2,required" json:"indexColumnNames"`
	OutputColumnNames []string                     `thrift:"3,required" json:"outputColumnNames"`
	Keys              *PrestoThriftPageResult      `thrift:"4,required" json:"keys"`
	OutputConstraint  *PrestoThriftTupleDomain     `thrift:"5,required" json:"outputConstraint"`
	MaxSplitCount     int32                        `thrift:"6,required" json:"maxSplitCount"`
	NextToken         *PrestoThriftNullableToken   `thrift:"7,required" json:"nextToken"`
}

// PrestoThriftServicePrestoGetIndexSplitsResponse ...
type PrestoThriftServicePrestoGetIndexSplitsResponse struct {
	Value *PrestoThriftSplitBatch       `thrift:"0" json:"value,omitempty"`
	Ex1   *PrestoThriftServiceException `thrift:"1" json:"ex1,omitempty"`
}

// PrestoThriftServicePrestoGetRowsRequest ...
type PrestoThriftServicePrestoGetRowsRequest struct {
	SplitId   *PrestoThriftId            `thrift:"1,required" json:"splitId"`
	Columns   []string                   `thrift:"2,required" json:"columns"`
	MaxBytes  int64                      `thrift:"3,required" json:"maxBytes"`
	NextToken *PrestoThriftNullableToken `thrift:"4,required" json:"nextToken"`
}

// PrestoThriftServicePrestoGetRowsResponse ...
type PrestoThriftServicePrestoGetRowsResponse struct {
	Value *PrestoThriftPageResult       `thrift:"0" json:"value,omitempty"`
	Ex1   *PrestoThriftServiceException `thrift:"1" json:"ex1,omitempty"`
}

// PrestoThriftServicePrestoGetSplitsRequest ...
type PrestoThriftServicePrestoGetSplitsRequest struct {
	SchemaTableName  *PrestoThriftSchemaTableName   `thrift:"1,required" json:"schemaTableName"`
	DesiredColumns   *PrestoThriftNullableColumnSet `thrift:"2,required" json:"desiredColumns"`
	OutputConstraint *PrestoThriftTupleDomain       `thrift:"3,required" json:"outputConstraint"`
	MaxSplitCount    int32                          `thrift:"4,required" json:"maxSplitCount"`
	NextToken        *PrestoThriftNullableToken     `thrift:"5,required" json:"nextToken"`
}

// PrestoThriftServicePrestoGetSplitsResponse ...
type PrestoThriftServicePrestoGetSplitsResponse struct {
	Value *PrestoThriftSplitBatch       `thrift:"0" json:"value,omitempty"`
	Ex1   *PrestoThriftServiceException `thrift:"1" json:"ex1,omitempty"`
}

// PrestoThriftServicePrestoGetTableMetadataRequest ...
type PrestoThriftServicePrestoGetTableMetadataRequest struct {
	SchemaTableName *PrestoThriftSchemaTableName `thrift:"1,required" json:"schemaTableName"`
}

// PrestoThriftServicePrestoGetTableMetadataResponse ...
type PrestoThriftServicePrestoGetTableMetadataResponse struct {
	Value *PrestoThriftNullableTableMetadata `thrift:"0" json:"value,omitempty"`
	Ex1   *PrestoThriftServiceException      `thrift:"1" json:"ex1,omitempty"`
}

// PrestoThriftServicePrestoListSchemaNamesRequest ...
type PrestoThriftServicePrestoListSchemaNamesRequest struct {
}

// PrestoThriftServicePrestoListSchemaNamesResponse ...
type PrestoThriftServicePrestoListSchemaNamesResponse struct {
	Value []string                      `thrift:"0" json:"value,omitempty"`
	Ex1   *PrestoThriftServiceException `thrift:"1" json:"ex1,omitempty"`
}

// PrestoThriftServicePrestoListTablesRequest ...
type PrestoThriftServicePrestoListTablesRequest struct {
	SchemaNameOrNull *PrestoThriftNullableSchemaName `thrift:"1,required" json:"schemaNameOrNull"`
}

// PrestoThriftServicePrestoListTablesResponse ...
type PrestoThriftServicePrestoListTablesResponse struct {
	Value []*PrestoThriftSchemaTableName `thrift:"0" json:"value,omitempty"`
	Ex1   *PrestoThriftServiceException  `thrift:"1" json:"ex1,omitempty"`
}

// Client is useful for testing the RPC
type Client interface {
	Call(method string, request interface{}, response interface{}) error
}

// PrestoThriftServiceClient ...
type PrestoThriftServiceClient struct {
	Client Client
}

// PrestoGetIndexSplits ...
func (s *PrestoThriftServiceClient) PrestoGetIndexSplits(schemaTableName *PrestoThriftSchemaTableName, indexColumnNames []string, outputColumnNames []string, keys *PrestoThriftPageResult, outputConstraint *PrestoThriftTupleDomain, maxSplitCount int32, nextToken *PrestoThriftNullableToken) (ret *PrestoThriftSplitBatch, err error) {
	req := &PrestoThriftServicePrestoGetIndexSplitsRequest{
		SchemaTableName:   schemaTableName,
		IndexColumnNames:  indexColumnNames,
		OutputColumnNames: outputColumnNames,
		Keys:              keys,
		OutputConstraint:  outputConstraint,
		MaxSplitCount:     maxSplitCount,
		NextToken:         nextToken,
	}
	res := &PrestoThriftServicePrestoGetIndexSplitsResponse{}
	err = s.Client.Call("prestoGetIndexSplits", req, res)
	if err == nil {
		switch {
		case res.Ex1 != nil:
			err = res.Ex1
		}
	}
	if err == nil {
		ret = res.Value
	}
	return
}

func (s *PrestoThriftServiceClient) PrestoGetRows(splitId *PrestoThriftId, columns []string, maxBytes int64, nextToken *PrestoThriftNullableToken) (ret *PrestoThriftPageResult, err error) {
	req := &PrestoThriftServicePrestoGetRowsRequest{
		SplitId:   splitId,
		Columns:   columns,
		MaxBytes:  maxBytes,
		NextToken: nextToken,
	}
	res := &PrestoThriftServicePrestoGetRowsResponse{}
	err = s.Client.Call("prestoGetRows", req, res)
	if err == nil {
		switch {
		case res.Ex1 != nil:
			err = res.Ex1
		}
	}
	if err == nil {
		ret = res.Value
	}
	return
}

func (s *PrestoThriftServiceClient) PrestoGetSplits(schemaTableName *PrestoThriftSchemaTableName, desiredColumns *PrestoThriftNullableColumnSet, outputConstraint *PrestoThriftTupleDomain, maxSplitCount int32, nextToken *PrestoThriftNullableToken) (ret *PrestoThriftSplitBatch, err error) {
	req := &PrestoThriftServicePrestoGetSplitsRequest{
		SchemaTableName:  schemaTableName,
		DesiredColumns:   desiredColumns,
		OutputConstraint: outputConstraint,
		MaxSplitCount:    maxSplitCount,
		NextToken:        nextToken,
	}
	res := &PrestoThriftServicePrestoGetSplitsResponse{}
	err = s.Client.Call("prestoGetSplits", req, res)
	if err == nil {
		switch {
		case res.Ex1 != nil:
			err = res.Ex1
		}
	}
	if err == nil {
		ret = res.Value
	}
	return
}

// PrestoGetTableMetadata ...
func (s *PrestoThriftServiceClient) PrestoGetTableMetadata(schemaTableName *PrestoThriftSchemaTableName) (ret *PrestoThriftNullableTableMetadata, err error) {
	req := &PrestoThriftServicePrestoGetTableMetadataRequest{
		SchemaTableName: schemaTableName,
	}
	res := &PrestoThriftServicePrestoGetTableMetadataResponse{}
	err = s.Client.Call("prestoGetTableMetadata", req, res)
	if err == nil {
		switch {
		case res.Ex1 != nil:
			err = res.Ex1
		}
	}
	if err == nil {
		ret = res.Value
	}
	return
}

// PrestoListSchemaNames ...
func (s *PrestoThriftServiceClient) PrestoListSchemaNames() (ret []string, err error) {
	req := &PrestoThriftServicePrestoListSchemaNamesRequest{}
	res := &PrestoThriftServicePrestoListSchemaNamesResponse{}
	err = s.Client.Call("prestoListSchemaNames", req, res)
	if err == nil {
		switch {
		case res.Ex1 != nil:
			err = res.Ex1
		}
	}
	if err == nil {
		ret = res.Value
	}
	return
}

// PrestoListTables ...
func (s *PrestoThriftServiceClient) PrestoListTables(schemaNameOrNull *PrestoThriftNullableSchemaName) (ret []*PrestoThriftSchemaTableName, err error) {
	req := &PrestoThriftServicePrestoListTablesRequest{
		SchemaNameOrNull: schemaNameOrNull,
	}
	res := &PrestoThriftServicePrestoListTablesResponse{}
	err = s.Client.Call("prestoListTables", req, res)
	if err == nil {
		switch {
		case res.Ex1 != nil:
			err = res.Ex1
		}
	}
	if err == nil {
		ret = res.Value
	}
	return
}
